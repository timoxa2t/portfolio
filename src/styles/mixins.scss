@use "sass:map";
@use "./variables.scss";

// ========================================
// RESPONSIVE BREAKPOINT MIXINS (Bootstrap Compatible)
// ========================================

// Media query helper for min-width (mobile-first)
@mixin media-min($breakpoint) {
  @if map.has-key(variables.$breakpoints, $breakpoint) {
    $breakpoint-value: map.get(variables.$breakpoints, $breakpoint);
    @if $breakpoint-value == 0 {
      @content;
    } @else {
      @media screen and (min-width: $breakpoint-value) {
        @content;
      }
    }
  } @else {
    @warn "Invalid breakpoint: #{$breakpoint}";
  }
}

// Media query helper for max-width
@mixin media-max($breakpoint) {
  @if map.has-key(variables.$breakpoints, $breakpoint) {
    $breakpoint-value: map.get(variables.$breakpoints, $breakpoint);
    @if $breakpoint-value > 0 {
      $max-width: $breakpoint-value - 1px;
      @media screen and (max-width: $max-width) {
        @content;
      }
    }
  } @else {
    @warn "Invalid breakpoint: #{$breakpoint}";
  }
}

// Media query helper for between breakpoints
@mixin media-between($lower, $upper) {
  @if map.has-key(variables.$breakpoints, $lower) and
    map.has-key(variables.$breakpoints, $upper)
  {
    $lower-value: map.get(variables.$breakpoints, $lower);
    $upper-value: map.get(variables.$breakpoints, $upper);
    $max-width: $upper-value - 1px;

    @if $lower-value == 0 {
      @media screen and (max-width: $max-width) {
        @content;
      }
    } @else {
      @media screen and (min-width: $lower-value) and (max-width: $max-width) {
        @content;
      }
    }
  } @else {
    @warn "Invalid breakpoint range: #{$lower} to #{$upper}";
  }
}

// ========================================
// Z-INDEX UTILITIES
// ========================================

@mixin z-index($layer) {
  @if map.has-key(variables.$z-indices, $layer) {
    z-index: map.get(variables.$z-indices, $layer);
  } @else {
    @warn "Invalid z-index layer: #{$layer}";
  }
}

// ========================================
// CUSTOM UTILITIES (Not provided by Bootstrap/MUI)
// ========================================

// Visually hidden (for accessibility)
@mixin visually-hidden() {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

// Absolute center positioning
@mixin absolute-center() {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// Absolute fill
@mixin absolute-fill() {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

// Custom property helper
@mixin custom-property($property) {
  @if map.has-key(variables.$custom-properties, $property) {
    #{$property}: map.get(variables.$custom-properties, $property);
  } @else {
    @warn "Invalid custom property: #{$property}";
  }
}
